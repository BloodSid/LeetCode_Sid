package leetcode.editor.cn;
//Âú®‰∏Ä‰∏™Áî± 'L' , 'R' Âíå 'X' ‰∏â‰∏™Â≠óÁ¨¶ÁªÑÊàêÁöÑÂ≠óÁ¨¶‰∏≤Ôºà‰æãÂ¶Ç"RXXLRXRXL"Ôºâ‰∏≠ËøõË°åÁßªÂä®Êìç‰Ωú„ÄÇ‰∏ÄÊ¨°ÁßªÂä®Êìç‰ΩúÊåáÁî®‰∏Ä‰∏™"LX"ÊõøÊç¢‰∏Ä‰∏™"XL"ÔºåÊàñ
//ËÄÖÁî®‰∏Ä‰∏™"XR"ÊõøÊç¢‰∏Ä‰∏™"RX"„ÄÇÁé∞ÁªôÂÆöËµ∑ÂßãÂ≠óÁ¨¶‰∏≤startÂíåÁªìÊùüÂ≠óÁ¨¶‰∏≤endÔºåËØ∑ÁºñÂÜô‰ª£Á†ÅÔºåÂΩì‰∏î‰ªÖÂΩìÂ≠òÂú®‰∏ÄÁ≥ªÂàóÁßªÂä®Êìç‰Ωú‰ΩøÂæóstartÂèØ‰ª•ËΩ¨Êç¢ÊàêendÊó∂Ôºå ËøîÂõû
//True„ÄÇ 
//
// 
//
// Á§∫‰æã : 
//
// ËæìÂÖ•: start = "RXXLRXRXL", end = "XRLXXRRLX"
//ËæìÂá∫: True
//Ëß£Èáä:
//Êàë‰ª¨ÂèØ‰ª•ÈÄöËøá‰ª•‰∏ãÂá†Ê≠•Â∞ÜstartËΩ¨Êç¢Êàêend:
//RXXLRXRXL ->
//XRXLRXRXL ->
//XRLXRXRXL ->
//XRLXXRRXL ->
//XRLXXRRLX
// 
//
// 
//
// ÊèêÁ§∫Ôºö 
//
// 
// 1 <= len(start) = len(end) <= 10000„ÄÇ 
// startÂíåend‰∏≠ÁöÑÂ≠óÁ¨¶‰∏≤‰ªÖÈôê‰∫é'L', 'R'Âíå'X'„ÄÇ 
// 
// üëç 192 üëé 0


/**
 * Âú®LRÂ≠óÁ¨¶‰∏≤‰∏≠‰∫§Êç¢Áõ∏ÈÇªÂ≠óÁ¨¶
 *
 * @author IronSid
 * @version 1.0
 * @since 2022-10-02 13:46:23 
 */
public class SwapAdjacentInLrStringSolution {
//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    public boolean canTransform(String start, String end) {
        char[] c1 = start.toCharArray();
        char[] c2 = end.toCharArray();
        int n = c1.length;
        int p1 = 0; int p2 = 0;
        while (true) {
            while (p1 != n && c1[p1] == 'X') p1++;
            while (p2 != n && c2[p2] == 'X') p2++;
            if (p1 == n || p2 == n) return p1 == p2;
            if (c1[p1] != c2[p2]) return false;
            else if (c1[p1] == 'R') {
                if (p1 > p2) return false;
            } else if (c1[p1] == 'L') {
                if (p2 > p1) return false;
            }
            p1++;
            p2++;
        }
    }
}
//leetcode submit region end(Prohibit modification and deletion)

}
